(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{390:function(n,s,e){"use strict";e.r(s);var t=e(45),l=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"生产环境下单独提取css文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产环境下单独提取css文件"}},[n._v("#")]),n._v(" 生产环境下单独提取css文件")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("下载插件")]),n._v(" "),e("blockquote",[e("p",[n._v("npm install --save-dev mini-css-extract-plugin")])])]),n._v(" "),e("li",[e("p",[n._v("修改webpack.config.js的配置")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const { resolve } = require('path');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/js/index.js',\n  output: {\n    filename: 'js/built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          // 创建 style 标签，将样式放入\n          // 'style-loader',\n          // 这个 loader 取代 style-loader。作用：提取 js 中的 css 成单独文件\n          MiniCssExtractPlugin.loader,\n          // 将 css 文件整合到 js 文件中\n          'css-loader'\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    }),\n    new MiniCssExtractPlugin({\n      // 对输出的 css 文件进行重命名\n      filename: 'css/built.css'\n    })\n  ],\n  mode: 'production'\n};\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[n._v("运行指令: webpack")])])])}),[],!1,null,null,null);s.default=l.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{392:function(s,n,e){"use strict";e.r(n);var t=e(45),i=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"开发环境下css压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境下css压缩"}},[s._v("#")]),s._v(" 开发环境下css压缩")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("下载插件")]),s._v(" "),e("blockquote",[e("p",[s._v("npm install --save-dev optimize-css-assets-webpack-plugin")])])]),s._v(" "),e("li",[e("p",[s._v("修改webpack.config.js文件")])])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const { resolve } = require('path');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst OptimizeCssAssetsWebpackPlugin = require('optimize-css-assets-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/js/index.js',\n  output: {\n    filename: 'js/built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          'css-loader',\n          {\n            loader: 'postcss-loader',\n            options: {\n              ident: 'postcss',\n              plugins: () => [require('postcss-preset-env')()]\n            }\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    }),\n\n    new MiniCssExtractPlugin({\n      filename: 'css/built.css'\n    }),\n\n    // 压缩 css\n    new OptimizeCssAssetsWebpackPlugin()\n  ],\n  mode: 'production'\n};\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("运行webpack")])])])}),[],!1,null,null,null);n.default=i.exports}}]);
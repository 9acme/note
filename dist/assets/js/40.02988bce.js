(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{406:function(e,n,s){"use strict";s.r(n);var l=s(45),t=Object(l.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"开发环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[e._v("#")]),e._v(" 开发环境")]),e._v(" "),s("h2",{attrs:{id:"打包样式资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包样式资源"}},[e._v("#")]),e._v(" 打包样式资源")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("下载loader(less-loader或sass-loader只需下载一个即可)")]),e._v(" "),s("blockquote",[s("p",[e._v("npm i css-loader style-loader less-loader less sass-loader -D")])])]),e._v(" "),s("li",[s("p",[e._v("修改webpack.config.js文件")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// resolve 用来拼接绝对路径的方法\nconst { resolve } = require('path');\n\nmodule.exports = {\n  // 入口位置\n  entry: './src/index.js',\n  output: {\n    // 输出文件名\n    filename: 'built.js',\n    // 输出路径\n    // dirname nodejs 的变量，代表当前文件的目录绝对\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    // 详细 loader 配置\n    // 不同文件必须配置不同 loader 处理\n    rules: [\n      {\n        // 匹配哪些文件\n        test: /\\.css$/,\n\n        // 使用哪些 loader 进行处理\n        use: [\n          // use 数组中 loader 执行顺序：从右到左，从下到上 依次执行\n          // 创建 style 标签，将 js 中的样式资源插入进行，添加到 head 中生效\n          'style-loader',\n\n          // 将 css 文件变成 commonjs 模块加载 js 中，里面内容是样式字符串\n          'css-loader'\n        ]\n      },\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n\n          // 将 less 文件编译成 css 文件\n          // 需要下载 less-loader 和 less\n          'less-loader'\n        ]\n      },\n      {\n        test: /\\.scss$/,\n        use: [\n          'style-loader',\n          'css-loader',\n\n          // 将 sass 文件编译成 css 文件\n          // 需要下载 sass-loader 和 sass\n          'sass-loader'\n        ]\n      }\n    ]\n  },\n  // plugins 的配置\n  plugins: [],\n  // 模式\n  mode: 'development' // 开发模式\n  // mode: 'production'  // 生产模式\n};\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("运行webpack")])]),e._v(" "),s("h2",{attrs:{id:"打包html资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包html资源"}},[e._v("#")]),e._v(" 打包html资源")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("下载plugin插件")]),e._v(" "),s("blockquote",[s("p",[e._v("npm install --save-dev html-webpack-plugin")])])]),e._v(" "),s("li",[s("p",[e._v("修改webpack.config.js文件")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst { resolve } = require('path');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: []\n  },\n  plugins: [\n    // plugins 的配置\n    // html-webpack-plugin\n    // 功能：默认会创建一个空的 HTML，自动引入打包输出的所有资源（JS/CSS）\n    // 需求：需要有结构的 HTML 文件\n    new HtmlWebpackPlugin({\n      // 复制 './src/index.html' 文件，并自动引入打包输出的所有资源（JS/CSS）\n      template: './src/index.html'\n    })\n  ],\n  mode: 'development'\n};\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("运行webpack")])]),e._v(" "),s("h2",{attrs:{id:"打包图片资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包图片资源"}},[e._v("#")]),e._v(" 打包图片资源")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("下载loader")]),e._v(" "),s("blockquote",[s("p",[e._v("npm install --save-dev html-loader url-loader file-load")])])]),e._v(" "),s("li",[s("p",[e._v("修改webpack.config.js")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const { resolve } = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n\n        // 要使用多个 loader 处理用 use\n        use: ['style-loader', 'css-loader', 'less-loader']\n      },\n      {\n        // 问题：默认处理不了 html 中 img 图片\n        // 处理图片资源\n        test: /\\.(jpg|png|gif)$/,\n        loader: 'url-loader',\n        options: {\n          limit: 74 * 1024,\n\n          // 问题：因为 url-loader 默认使用 es6 模块化解析，而 html-loader 引入图片是 commonjs\n          // 解析时会出问题：[object Module]\n          // 解决：关闭 url-loader 的 es6 模块化，使用 commonjs 解析\n          esModule: false,\n\n          // 给图片进行重命名\n          // [hash:10]取图片的 hash 的前 10 位\n          // [ext]取文件原来扩展名\n          name: '[hash:10].[ext]'\n        }\n      },\n      {\n        test: /\\.html$/,\n\n        // 处理 html 文件的 img 图片（负责引入 img，从而能被 url-loader 进行处理）\n        loader: 'html-loader'\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    })\n  ],\n  mode: 'development'\n};\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("运行webpack")])]),e._v(" "),s("h2",{attrs:{id:"打包其他资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包其他资源"}},[e._v("#")]),e._v(" 打包其他资源")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("下载loader")]),e._v(" "),s("blockquote",[s("p",[e._v("npm i file-loader -S")])])]),e._v(" "),s("li",[s("p",[e._v("修改webpack.config.js")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const { resolve } = require('path');\nconst htmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'css-loader']\n      },\n\n      // 打包其他资源(除了 html/js/css 资源以外的资源)\n      {\n        // 排除 css/js/html/png/jpg/gif/less/scss 资源, 排除用exclude\n        exclude: /\\.(html|css|js|png|jpg|gif|less|scss)$/,\n\n        //file-loader作用是将其他资源复制到指定目录\n        loader: 'file-loader'\n      }\n    ]\n  },\n  plugins: [\n    new htmlWebpackPlugin({\n      template: './src/index.html'\n    })\n  ],\n  mode: 'development'\n};\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("运行webpack")])]),e._v(" "),s("h2",{attrs:{id:"devserver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[e._v("#")]),e._v(" devServer")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("下载包")]),e._v(" "),s("blockquote",[s("p",[e._v("npm install webpack-dev-server --save-dev")])])]),e._v(" "),s("li",[s("p",[e._v("修改webpack.config.js配置文件")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const { resolve } = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/js/index.js',\n  output: {\n    filename: 'js/built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: []\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    })\n  ],\n  mode: 'development',\n  devServer: {\n    // 项目构建后路径\n    contentBase: resolve(__dirname, 'build'),\n    // 启动 gzip 压缩\n    compress: true,\n    // 端口号\n    port: 3000,\n    // 自动打开浏览器\n    open: true\n  }\n};\n\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("运行指令: npx webpack-dev-server")])]),e._v(" "),s("h2",{attrs:{id:"开发总配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发总配置"}},[e._v("#")]),e._v(" 开发总配置")]),e._v(" "),s("ol",[s("li",[e._v("修改webpack.config.js的配置")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const { resolve } = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  entry: './src/js/index.js',\n  output: {\n    filename: 'js/built.js',\n    path: resolve(__dirname, 'build')\n  },\n  module: {\n    rules: [\n      {\n        // 处理 css 资源\n        test: /\\.css$/,\n        use: ['style-loader', 'css-loader']\n      },\n      {\n        // 处理 less 资源\n        test: /\\.less$/,\n        use: ['style-loader', 'css-loader', 'less-loader']\n      },\n      {\n        // 处理图片资源\n        test: /\\.(png|jpg|gif)$/,\n        loader: 'url-loader',\n        options: {\n          name: '[hash:10].[ext]',\n          limit: 8 * 1024,\n          // 导出目录\n          outputPath: 'imgs',\n          // 关闭 es6 模块化\n          enModule: false\n        }\n      },\n      {\n        // 处理 html 中 img 资源\n        test: /\\.html$/,\n        loader: 'html-loader'\n      },\n      {\n        // 处理其他资源\n        exclude: /\\.(html|css|js|less|png|jpg|gif)$/,\n        loader: 'file-loader',\n        options: {\n          name: '[hash:10].[ext]',\n          outputPath: 'media'\n        }\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './src/index.html'\n    })\n  ],\n  mode: 'development',\n  devServer: {\n    contentBase: resolve(__dirname, 'build'),\n    compress: true,\n    port: 3000,\n    open: true\n  }\n};\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("运行npx webpack-dev-server")])])])}),[],!1,null,null,null);n.default=t.exports}}]);